<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <localRepository/>
  <interactiveMode/>
  <usePluginRegistry/>
  <offline/>
  <pluginGroups/>
  <servers/>
  <mirrors/>
  <proxies/>
  <profiles>
    <profile>
      <id>additional-repos</id>
      <repositories>
        <repository>
        <!-- Duplicating the Maven Central repository here (as it is already coming from Super POM) makes the build much faster,
             as the Maven Central is now treated as the first (default) repository (because it is before the JBoss.org one).
             Artifacts with release (fixed) versions are being downloaded primarily from there. Without the central being the
             first repository the JBoss.org Nexus would be contacted first and since it is quite slow it slows down the build.
             We use JBoss.org repo only for specific artifacts. -->
        <id>central</id>
        <name>Central Repository</name>
        <url>https://repo.maven.apache.org/maven2</url>
        <layout>default</layout>
        <snapshots>
          <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>jboss-public-repo</id>
          <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
        <repository>
          <id>jboss-product-repo</id>
          <url>https://maven.repository.redhat.com/ga</url>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
        </repository>
        <repository>
          <!-- Needed to download gradle-tooling-api required by Shrinkwrap. See also https://github.com/shrinkwrap/resolver/pull/114-->
          <!-- This is an ugly uber hack. The additional repository (especially some 'random' jfrog one) should not be required. -->
          <id>jfrog-gradle-repo</id>
          <url>https://repo.jfrog.org/artifactory/gradle</url>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
        <!-- Duplicating the Maven Central repository here (as it is already coming from Super POM) makes the build much faster,
             as the Maven Central is now treated as the first (default) repository (because it is before the JBoss.org one).
             Artifacts with release (fixed) versions are being downloaded primarily from there. Without the central being the
             first repository the JBoss.org Nexus would be contacted first and since it is quite slow it slows down the build.
             We use JBoss.org repo only for specific artifacts. -->
        <id>central</id>
        <name>Central Repository</name>
        <url>https://repo.maven.apache.org/maven2</url>
        <layout>default</layout>
        <snapshots>
          <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>jboss-public-repo</id>
          <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </pluginRepository>
        <pluginRepository>
          <id>jboss-product-repo</id>
          <url>https://maven.repository.redhat.com/ga</url>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>jfrog-gradle-repo</id>
          <url>https://repo.jfrog.org/artifactory/gradle</url>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>

  <activeProfiles>
    <activeProfile>additional-repos</activeProfile>
  </activeProfiles>

</settings>
